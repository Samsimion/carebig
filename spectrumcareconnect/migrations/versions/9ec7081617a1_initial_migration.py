"""initial migration

Revision ID: 9ec7081617a1
Revises: 
Create Date: 2025-10-29 21:57:09.922719

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9ec7081617a1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('condition_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('types', sa.Enum('school', 'clinic', 'ngo', 'other', name='type_of_organization'), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('support_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('therapy_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code_icd10', sa.String(), nullable=True),
    sa.Column('code_icd', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('severity_level', sa.Enum('mild', 'moderate', 'severe', name='severity_level'), nullable=True),
    sa.Column('common_therapies', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['condition_categories.id'], name='fk_condition_category_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_private', sa.Boolean(), nullable=True),
    sa.Column('approved_required', sa.Boolean(), nullable=True),
    sa.Column('support_group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['support_group_id'], ['support_groups.id'], name='fk_groupsetting_supportgroup_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('therapy_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('session_length_min', sa.Integer(), nullable=True),
    sa.Column('recomendation_frequency', sa.String(), nullable=True),
    sa.Column('delivery_modes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['therapy_categories.id'], name='fk_therapytype_category_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=120), nullable=False),
    sa.Column('last_name', sa.String(length=120), nullable=False),
    sa.Column('middle_name', sa.String(length=120), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('_password_hash', sa.String(length=255), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'suspended', name='user_status'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('achieved_at', sa.DateTime(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='fk_user_role_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('admin_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_title', sa.String(), nullable=True),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('permission_level', sa.Enum('super_admin', 'manager', 'support'), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_adminprofile_user_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('entity_type', sa.String(), nullable=True),
    sa.Column('old_values', sa.Text(), nullable=True),
    sa.Column('new_values', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('device_info', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['entity_id'], ['users.id'], name='fk_auditlog_entity_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_auditlog_user_iddd'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('child_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', 'other', 'prefer_not_to_say', name='childs_gender'), nullable=True),
    sa.Column('profile_photo_url', sa.String(), nullable=True),
    sa.Column('diagnosis_notes', sa.String(), nullable=True),
    sa.Column('support_level', sa.Enum('level_1', 'level_2', 'level_3', name='childs_severity_support_level'), nullable=True),
    sa.Column('education_setting', sa.Enum('mainstream', 'special_school', 'home_school', 'none', name='education_settings'), nullable=True),
    sa.Column('communication_mode', sa.Enum('verbal', 'non_verbal', 'aac_device', 'sign_language', 'mixed', name='communication_method'), nullable=True),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('interests', sa.Text(), nullable=True),
    sa.Column('medical_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('primary_diagnosis_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='fk_childprofile_organization_id'),
    sa.ForeignKeyConstraint(['primary_diagnosis_id'], ['conditions.id'], name='fk_childprofile_primarydiagnosis_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('donor_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('organization_name', sa.String(length=120), nullable=True),
    sa.Column('donation_focus_area', sa.String(length=100), nullable=True),
    sa.Column('total_donations', sa.Float(), nullable=True),
    sa.Column('donations_count', sa.Integer(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_donationprofile_user_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('group_bans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('banned_at', sa.DateTime(), nullable=True),
    sa.Column('support_group_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('banned_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['banned_by_user_id'], ['users.id'], name='fk_groupban_bannedbyuser_id'),
    sa.ForeignKeyConstraint(['support_group_id'], ['support_groups.id'], name='fk_groupban_supportgroup_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_groupban_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_date', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.Column('support_group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], name='fk_groupevent_createdbyuser_id'),
    sa.ForeignKeyConstraint(['support_group_id'], ['support_groups.id'], name='fk_groupevent_supportgroup_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('support_group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['support_group_id'], ['support_groups.id'], name='fk_groupmember_supportgroup_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_groupmember_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('support_group_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['support_group_id'], ['support_groups.id'], name='fk_grouppost_supportgroup_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_grouppost_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('support_group_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['support_group_id'], ['support_groups.id'], name='fk_grouprole_supportgroup_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_grouprole_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], name='fk_message_recieve_id'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name='fk_message_sender_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('session_booked', 'session_cancelled', 'goal_achieved', 'payment_received', 'donation_received', 'report_shared', 'general', name='notification_type'), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('related_entity_type', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', name='notification_priority'), nullable=True),
    sa.Column('link_url', sa.String(), nullable=True),
    sa.Column('related_entity_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_notification_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parent_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', 'other', 'prefer_not_to_say', name='parent_profile_gender'), nullable=True),
    sa.Column('address_line', sa.String(length=130), nullable=True),
    sa.Column('address_line2', sa.String(length=130), nullable=True),
    sa.Column('city', sa.String(length=130), nullable=True),
    sa.Column('state_province', sa.String(length=155), nullable=True),
    sa.Column('postal_code', sa.String(length=130), nullable=True),
    sa.Column('country', sa.String(length=155), nullable=True),
    sa.Column('preferred_language', sa.String(length=120), nullable=True),
    sa.Column('emergency_contact_phone', sa.String(length=20), nullable=False),
    sa.Column('occupation', sa.String(length=155), nullable=True),
    sa.Column('household_notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_parentprofile_user_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('progress_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('measurement_unit', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('therapy_type_id', sa.Integer(), nullable=True),
    sa.Column('condition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['condition_id'], ['conditions.id'], name='fk_progressmetrics_condition_id'),
    sa.ForeignKeyConstraint(['therapy_type_id'], ['therapy_types.id'], name='fk_progressmetrics_therapytype_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_url', sa.String(), nullable=True),
    sa.Column('category', sa.Enum('guide', 'exercise', 'worksheet', 'video', 'other', name='resource_category'), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('language_code', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('uploaded_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['users.id'], name='fk_resource_uploadedbyuser_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teacher_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', 'others', 'preffered_not_to_say'), nullable=True),
    sa.Column('address_line1', sa.String(length=130), nullable=True),
    sa.Column('address_line2', sa.String(length=130), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state_province', sa.String(), nullable=True),
    sa.Column('postal_code', sa.String(length=130), nullable=True),
    sa.Column('country', sa.String(length=130), nullable=True),
    sa.Column('license_authority', sa.String(length=250), nullable=True),
    sa.Column('specialty_summary', sa.String(), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('rating_avg', sa.Numeric(precision=2, scale=1), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('profile_photo_url', sa.String(length=130), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('achieved_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('rating_avg <= 5', name='valid_avg_rating'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_teacherprofile_user_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('therapist_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_of_birth', sa.String(), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', 'other', 'prefer_not_to_say', name='therapist_gender'), nullable=True),
    sa.Column('address_line1', sa.String(length=150), nullable=True),
    sa.Column('address_line2', sa.String(length=150), nullable=True),
    sa.Column('city', sa.String(length=150), nullable=True),
    sa.Column('state_province', sa.String(length=150), nullable=True),
    sa.Column('postal_code', sa.String(length=125), nullable=True),
    sa.Column('country', sa.String(length=150), nullable=True),
    sa.Column('license_authority', sa.String(), nullable=True),
    sa.Column('specialty_summary', sa.String(), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('rating_avg', sa.Numeric(precision=2, scale=1), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.Enum('male', 'female', 'other', 'prefer_not_to_say'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('achieved_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('rating_avg<=5', name='valid_avg_rating'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_therapistprofile_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('therapytype_conditions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('effectiveness_level', sa.Enum('high', 'moderate', 'emerging', 'unknown', name='effectiveness_level'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('therapy_type_id', sa.Integer(), nullable=False),
    sa.Column('condition_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['condition_id'], ['conditions.id'], name='fk_therapytypecondition_condition_id'),
    sa.ForeignKeyConstraint(['therapy_type_id'], ['therapy_types.id'], name='fk_therapytypecondition_therapy_type_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('member', 'staff', 'admin', name='user_role'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='fk_userorg_organization_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_userorg_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('volunteer_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('skills', sa.String(), nullable=True),
    sa.Column('availability', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('achived_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_volunteerprofile_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('medical', 'educational', 'other', name='appointment_type'), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('scheduled', 'completed', 'cancelled', name='appointment_status'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_appointment_child_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_appointment_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('availability_slots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('open', 'booked', 'blocked', name='availability_slot_status'), nullable=False),
    sa.Column('location_type', sa.Enum('in_person', 'virtual', 'group'), nullable=True),
    sa.Column('meeting_link', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('therapist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['therapist_id'], ['therapist_profiles.id'], name='fk_availabilityslot_therapist_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('care_teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_careteam_child_id'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name='fk_careteam_role_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_careteam_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('child_therapists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('relationship_type', sa.Enum('primary', 'secondary', 'temporary', name='relationship_type'), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('therapist_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_childtherapist_child_id'),
    sa.ForeignKeyConstraint(['therapist_id'], ['therapist_profiles.id'], name='fk_childtherapist_therapist_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scope', sa.Enum('medical_reports', 'progress', 'school_sharing', 'all', name='consent_scope'), nullable=True),
    sa.Column('status', sa.Enum('requested', 'granted', 'revoked', name='consent_status'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('granted_to_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_consent_child_id'),
    sa.ForeignKeyConstraint(['granted_to_user_id'], ['users.id'], name='fk_consent_granted_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('donations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount_cents', sa.Integer(), nullable=False),
    sa.Column('currency_code', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'completed', 'failed', name='donation_status'), nullable=True),
    sa.Column('purpose', sa.Enum('general', 'child_support', 'therapy_fund', 'infrastructure', 'other', name='donation_purpose'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('donor_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['donor_id'], ['donor_profiles.id'], name='fk_donation_donor_id'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='fk_donation_organization_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('target_value', sa.Numeric(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('active', 'achieved', 'missed', 'archived', name='goal_status'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.Column('progress_metric_id', sa.Integer(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_goals_child_id'),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], name='fk_goals_created_by_user_id'),
    sa.ForeignKeyConstraint(['progress_metric_id'], ['progress_metrics.id'], name='fk_goals_progressmetric_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('group_post_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_post_id'], ['group_posts.id'], name='fk_groupcomment_grouppost_id'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_groupcomment_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incident_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('severity', sa.Enum('low', 'medium', 'high', 'critical', name='incident_report_severity'), nullable=True),
    sa.Column('status', sa.Enum('open', 'reviewed', 'resolved', 'archived', name='incident_report_status'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.Column('reported_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_incidentreport_child_id'),
    sa.ForeignKeyConstraint(['reported_by_user_id'], ['users.id'], name='fk_incidentreport_reportedbyuser_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_histories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('medications', sa.Text(), nullable=True),
    sa.Column('past_surgeries', sa.Text(), nullable=True),
    sa.Column('emergency_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by_user_id', sa.Integer(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.Column('condition_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='medicalhistory_child_id'),
    sa.ForeignKeyConstraint(['condition_id'], ['conditions.id'], name='medicalhistory_condition_id'),
    sa.ForeignKeyConstraint(['updated_by_user_id'], ['users.id'], name='medicalhistory_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('medical_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('report_type', sa.Enum('diagnosis', 'assessment', 'lab_result', 'doctor_note', 'therapy_plan', 'other', name='medical_report_type'), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('file_url', sa.String(), nullable=True),
    sa.Column('file_hash', sa.String(), nullable=True),
    sa.Column('is_sensitive', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('archived_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.Column('uploaded_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_medicalreport_child_id'),
    sa.ForeignKeyConstraint(['uploaded_by_user_id'], ['users.id'], name='fk_medicalreport_uploadedbyuser_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parent_child_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_relationship', sa.Enum('mother', 'father', 'guardian', 'sibling', 'other', name='parent_relationship'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_parentchildlink_child_id'),
    sa.ForeignKeyConstraint(['parent_id'], ['parent_profiles.id'], name='fk_parentchildlink_parent_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('therapist_therapies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('qualification_notes', sa.Text(), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('is_primary_speciality', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('therapist_id', sa.Integer(), nullable=False),
    sa.Column('therapy_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['therapist_id'], ['therapist_profiles.id'], name='fk_therapisttherapie_therapist_id'),
    sa.ForeignKeyConstraint(['therapy_type_id'], ['therapy_types.id'], name='fk_therapisttherapie_therapy_type_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('volunteer_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('achieved_at', sa.DateTime(), nullable=True),
    sa.Column('volunteer_id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_volunteerassignment_child_id'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='fk_volunteerassignment_organization_id'),
    sa.ForeignKeyConstraint(['volunteer_id'], ['volunteer_profiles.id'], name='fk_volunteerassignment_volunteer_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('badge_name', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('earned_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('goal_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_achievement_child_id'),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], name='fk_achievement_goal_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('support_group_id', sa.Integer(), nullable=True),
    sa.Column('reported_by_user_id', sa.Integer(), nullable=True),
    sa.Column('group_post_id', sa.Integer(), nullable=True),
    sa.Column('group_comment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_comment_id'], ['group_comments.id'], name='fk_groupreport_groupcomment_id'),
    sa.ForeignKeyConstraint(['group_post_id'], ['group_posts.id'], name='fk_groupreport_grouppost_id'),
    sa.ForeignKeyConstraint(['reported_by_user_id'], ['users.id'], name='fk_groupreport_reportedbyuser_id'),
    sa.ForeignKeyConstraint(['support_group_id'], ['support_groups.id'], name='fk_groupreport_supportgroup_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('school_report_shares',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('medical_report_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['medical_report_id'], ['medical_reports.id'], name='fk_schoolreportshare_medicalreport_id'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher_profiles.id'], name='fk_schoolreportshare_teacher_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('price_cents', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('achieved_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('therapist_id', sa.Integer(), nullable=True),
    sa.Column('therapy_type_id', sa.Integer(), nullable=True),
    sa.Column('condition_id', sa.Integer(), nullable=True),
    sa.Column('availability_slot_id', sa.Integer(), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['availability_slot_id'], ['availability_slots.id'], name='fk_session_availabilityslot_id'),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_session_child_id'),
    sa.ForeignKeyConstraint(['condition_id'], ['conditions.id'], name='fk_session_condition_id'),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], name='fk_session_createdbyuser_id'),
    sa.ForeignKeyConstraint(['therapist_id'], ['therapist_profiles.id'], name='fk_session_therapist_id'),
    sa.ForeignKeyConstraint(['therapy_type_id'], ['therapy_types.id'], name='fk_session_therapisttype_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('waitlists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('waiting', 'notified', 'booked', 'cancelled', name='waitlist_status'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('availability_slot_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['availability_slot_id'], ['availability_slots.id'], name='fk_waitlist_availability_slot_id'),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_waitlist_child_id'),
    sa.ForeignKeyConstraint(['parent_id'], ['parent_profiles.id'], name='fk_waitlist_parent_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ai_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('analysis_type', sa.Enum('progress_trend', 'risk_alert', 'recommendation', name='AI_analysis_type'), nullable=True),
    sa.Column('result_json', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_aianalysis_child_id'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name='fk_aianalysis_session_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('media_storages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=True),
    sa.Column('file_type', sa.Enum('image', 'video', 'audio', 'document', name='file_type'), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_sensitive', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('uploaded_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_mediastorage_child_id'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name='fk_mediastorage_session_id'),
    sa.ForeignKeyConstraint(['uploaded_by_id'], ['users.id'], name='fk_mediastorage_uploadedby_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount_cents', sa.Integer(), nullable=False),
    sa.Column('currency_code', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'completed', 'failed', 'refunded', name='payment_status'), nullable=False),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('payment_method', sa.Enum('credit_card', 'paypal', 'bank_transfer', 'cash', name='payment_method'), nullable=False),
    sa.Column('transaction_reference', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('donor_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['donor_id'], ['donor_profiles.id'], name='fk_payment_donor_id'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='fk_payment_organization_id'),
    sa.ForeignKeyConstraint(['parent_id'], ['parent_profiles.id'], name='fk_payment_parent_id'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name='fk_payment_session_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('progress_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('recorded_by_user_id', sa.Integer(), nullable=False),
    sa.Column('child_id', sa.Integer(), nullable=False),
    sa.Column('progress_metric_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_progressentry_child_id'),
    sa.ForeignKeyConstraint(['progress_metric_id'], ['progress_metrics.id'], name='fk_progressentry_progressmetric_id'),
    sa.ForeignKeyConstraint(['recorded_by_user_id'], ['users.id'], name='fk_progressentry_recievedbyuser_id'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name='fk_progressentry_session_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('rating >=1 AND rating <= 5', name='valid_rating_range'),
    sa.ForeignKeyConstraint(['parent_id'], ['parent_profiles.id'], name='fk_review_parent_id'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name='fk_review_session_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('session_feedbacks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('self_reflection', sa.Text(), nullable=True),
    sa.Column('peer_review', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('therapist_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name='fk_sessionfeedback_session_id'),
    sa.ForeignKeyConstraint(['therapist_id'], ['therapist_profiles.id'], name='fk_sessionfeedback_therapist_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('session_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('detailed_notes', sa.Text(), nullable=True),
    sa.Column('recommendations', sa.Text(), nullable=True),
    sa.Column('shared_with_parent', sa.Boolean(), nullable=True),
    sa.Column('shared_with_school', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('therapist_id', sa.Integer(), nullable=True),
    sa.Column('child_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['child_profiles.id'], name='fk_sessionnote_child_id'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name='fk_sessionnote_session_id'),
    sa.ForeignKeyConstraint(['therapist_id'], ['therapist_profiles.id'], name='fk_sessionnote_therapist_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supervision_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('junior_therapist_id', sa.Integer(), nullable=True),
    sa.Column('senior_therapist_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['junior_therapist_id'], ['therapist_profiles.id'], name='fk_supervisionsession_junior_therapist_id'),
    sa.ForeignKeyConstraint(['senior_therapist_id'], ['therapist_profiles.id'], name='fk_supervisionsession_senior_therapist_id'),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], name='fk_supervisionsession_session_id'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('supervision_sessions')
    op.drop_table('session_notes')
    op.drop_table('session_feedbacks')
    op.drop_table('reviews')
    op.drop_table('progress_entries')
    op.drop_table('payments')
    op.drop_table('media_storages')
    op.drop_table('ai_analyses')
    op.drop_table('waitlists')
    op.drop_table('sessions')
    op.drop_table('school_report_shares')
    op.drop_table('group_reports')
    op.drop_table('achievements')
    op.drop_table('volunteer_assignments')
    op.drop_table('therapist_therapies')
    op.drop_table('parent_child_links')
    op.drop_table('medical_reports')
    op.drop_table('medical_histories')
    op.drop_table('incident_reports')
    op.drop_table('group_comments')
    op.drop_table('goals')
    op.drop_table('donations')
    op.drop_table('consents')
    op.drop_table('child_therapists')
    op.drop_table('care_teams')
    op.drop_table('availability_slots')
    op.drop_table('appointments')
    op.drop_table('volunteer_profiles')
    op.drop_table('user_organizations')
    op.drop_table('therapytype_conditions')
    op.drop_table('therapist_profiles')
    op.drop_table('teacher_profiles')
    op.drop_table('resources')
    op.drop_table('progress_metrics')
    op.drop_table('parent_profiles')
    op.drop_table('notifications')
    op.drop_table('messages')
    op.drop_table('group_roles')
    op.drop_table('group_posts')
    op.drop_table('group_members')
    op.drop_table('group_events')
    op.drop_table('group_bans')
    op.drop_table('donor_profiles')
    op.drop_table('child_profiles')
    op.drop_table('audit_logs')
    op.drop_table('admin_profiles')
    op.drop_table('users')
    op.drop_table('therapy_types')
    op.drop_table('group_settings')
    op.drop_table('conditions')
    op.drop_table('therapy_categories')
    op.drop_table('support_groups')
    op.drop_table('roles')
    op.drop_table('organizations')
    op.drop_table('condition_categories')
    # ### end Alembic commands ###
